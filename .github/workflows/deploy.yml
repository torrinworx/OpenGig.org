name: Deploy Pipeline

on:
  release:
    types:
      - published
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      - name: Verify downloaded artifact
        run: ls ./

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Verify file operations
        run: |
          echo "Current directory structure:"
          ls -l ./
          file ./build.zip
          file /home/www/deploying/build.zip

      - name: Deploy application
        env:
          PUBLIC_IP: ${{ secrets.PUBLIC_IP }}
        run: |
          scp -o 'StrictHostKeyChecking=no' ./build.zip root@$PUBLIC_IP:/root/build.zip
          ssh -o "StrictHostKeyChecking=no" root@$PUBLIC_IP "
            # Ensure DBus and XDG environment variables are set for root
            export DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/$(id -u root)/bus
            export XDG_RUNTIME_DIR=/run/user/$(id -u root)

            # Initialize DBus session if dbus-launch is available
            if command -v dbus-launch > /dev/null; then
              dbus-launch --sh-syntax --exit-with-session
            fi

            # Proceed with deployment steps
            mkdir /root/deploying
            unzip -o -qq /root/build.zip -d /root/deploying
            rm -r /root/build.zip

            # Reload systemd
            systemctl daemon-reload

            # Move to new build directory and install dependencies
            mv /root/deploying/build /root/build.new
            rm -r /root/deploying
            cd /root/build.new/
            npm install

            # Stop opengig service
            systemctl stop opengig || echo 'skipped stop opengig'

            # Clean up old builds
            rm -r /root/build.old || true
            mv /root/build /root/build.old
            mv /root/build.new /root/build

            chmod +x /root/build/run.sh

            # Enable and start the service under root
            systemctl enable --now opengig
          "